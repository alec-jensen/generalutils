plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'me.alecjensen'

def getCommitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

version = "0.1.5-${getCommitHash()}-alpha"

repositories {
    mavenCentral()
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url = 'https://repo.extendedclip.com/releases/'
    }

    maven {
        url = 'https://repo.aikar.co/content/groups/aikar/'
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.21.4-R0.1-SNAPSHOT'
    compileOnly 'me.clip:placeholderapi:2.11.6'
    implementation 'org.bstats:bstats-bukkit:3.0.2'
    implementation 'co.aikar:acf-paper:0.5.1-SNAPSHOT'
}

shadowJar {
    relocate 'dev.dejvokep.boostedyaml', 'me.alecjensen.generalutils.shaded.boostedyaml'
    relocate 'org.bstats', 'me.alecjensen.generalutils.shaded.bstats'
    relocate 'co.aikar.acf', 'me.alecjensen.generalutils.shaded.acf'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
